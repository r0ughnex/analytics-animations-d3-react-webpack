// -------------------------------------
//   Dependencies
// -------------------------------------
// variables
@import "modules/Colors/variables";
@import "modules/Layout/variables";

// mixins
@import "modules/Transitions/mixins";
@import "modules/Typography/mixins";
@import "modules/Layout/mixins";
@import "modules/Section/mixins";

// -------------------------------------
//   Component - Hero
// -------------------------------------
/**
    * @name Hero
    * @desc --description--
**/

.hero {
    display: block;
    position: relative;

    width: 100%;
    min-height: 100vh;
    box-sizing: border-box;
    background-color: $color_bgrey_extdark;
}

// -------------------------------------
//   Hero - Content
// -------------------------------------
.content {
    @extend %center;
    @extend %section;

    display: block;
    position: relative;
    transform: translateZ(0);
    max-width: ($base_html_w_min * 1.2);
    @include mobile { text-align: center; }

    @include mobile-up {
        @include transform-center-v(false);
        max-width: ($base_html_w_min * 2.2);
    }
}

.headline {
    color: white;
    @include mobile { text-align: center; }
}

.copy {
    color: $color_grey_light;
    @include mobile { text-align: center; }
}

// -------------------------------------
//   Hero - Button
// -------------------------------------
$btn_pad_v: 20px;
$btn_pad_h: 20px;
$btn_pad: $btn_pad_v $btn_pad_h;

$btn_font_wt: $font_wt_h4;
$btn_font_sp: 0.10em;

$btn_min_w: 250px;
$btn_border_w: 2px;

.button {
    @include transitions(color, background-color);
    @extend %font-size-p;

    position: relative;
    cursor: pointer;

    display: inline-block;
    min-width: $btn_min_w;
    padding: $btn_pad;
    margin: 1em 0;

    overflow: hidden;
    box-sizing: border-box;

    text-align: center;
    font-weight: $font_wt_h4;
    letter-spacing: $btn_font_sp;
    text-transform: uppercase;

    border: none;
    outline: none;
    border-style: solid;
    border-width: $btn_border_w;

    color: $color_grey_meddark;
    border-color: $color_grey_meddark;
    background-color: transparent;

    &:after {
        @include transitions(width, color, background-color);
        position: absolute;
        content: "";
        z-index: -1;
        left: 0;
        top: 0;

        width: 0;
        height: 100%;
        border-width: 0;
        box-sizing: border-box;

        background-color: $color_grey_meddark;
        border-color: $color_grey_meddark;
        border-style: solid;
    }

    &:hover, &:focus {
        color: white;

        &:after {
            width: 100%;
            border-width: $btn_border_w;
        }
    }
}

// modifier - primary
.button_colorSecondary {
    composes: button;
    color: $color_primary;
    border-color: $color_primary;

    &:after {
        background-color: $color_primary;
    }

    &:hover, &:focus { color: white;
        &:after { border-color: $color_primary; }
    }
}

// modifier - secondary
.button_colorSecondary {
    composes: button;
    color: $color_secondary;
    border-color: $color_secondary;

    &:after {
        background-color: $color_secondary;
    }

    &:hover, &:focus { color: white;
        &:after { border-color: $color_secondary; }
    }
}

// -------------------------------------
//   Hero - Chart
// -------------------------------------
.chart {
    @extend %center;

    position: absolute;
    display: block;
    bottom: 0;
    right: 0;

    transform: translateZ(0);
    max-width: 100%;
    height: 45vh;
    width: 100%;

    @include mobile-up {
        max-width: 65%;
        height: 65vh;
    }
}

// -------------------------------------
//   Chart - Line
// -------------------------------------
.line {
    fill: none;
    stroke-width: 2px;
    stroke: $color_primary;
}

// modifier - animation start
// modifier - animation done
.line_animationStart,
.line_aniamtionEnd {
    stroke: none;
}

// -------------------------------------
//   Chart - Area
// -------------------------------------
.area {
    stroke-width: 0;
}

// modifier - position back
.area_posBack {
    composes: area;
    fill: $color_secondary;
}

// modifier - position front
.area_posFront {
    composes: area;
    fill: $color_primary;
}

// -------------------------------------
//   Chart - Baseline
// -------------------------------------
.baseline {
    stroke-width: 10px;
}

// modifier - position back
.baseline_posBack {
    composes: baseline;
    fill: $color_secondary;
}

// modifier - position front
.baseline_posFront {
    composes: baseline;
    stroke: $color_primary;
}

// modifier - position back left
// modifier - position back right
.baseline_posBackLeft  { composes: baseline_posBack; }
.baseline_posBackRight { composes: baseline_posBack; }

// modifier - position front left
// modifier - position front right
.baseline_posFrontLeft  { composes: baseline_posFront; }
.baseline_posFrontRight { composes: baseline_posFront; }

// -------------------------------------
//   Chart - Axis
// -------------------------------------
.axis {
    path, line {
        fill: none;
        stroke: $color_primary;
        shape-rendering: crispEdges;
    }

    .line {
        @include transitions(opacity);
        opacity: 1;
    }

    text {
       fill: $color_grey_medium;
        text-transform: uppercase;
        @extend %font-size-p;
    }
}

// modifier - position x
// modifier - position y
.axis_posX,
.axis_posY {
    composes: axis;
    g:first-of-type,
    g:last-of-type {
        display: none;
    }
}

// modifier - animation start
// modifier - animation done
.axis_animationStart,
.axis_animationDone {
    composes: axis;
    .line { opacity: 0; }
}

// modifier - position x - animation start
// modifier - position x - animation done
.axis_posXAnimationStart { composes: axis_posX; composes: axis_animationStart; }
.axis_posXAnimationDone  { composes: axis_posX; composes: axis_animationDone;  }

// modifier - position y - animation start
// modifier - position y - animation done
.axis_posYAnimationStart { composes: axis_posY; composes: axis_animationStart; }
.axis_posYAnimationDone  { composes: axis_posY; composes: axis_animationDone;  }

